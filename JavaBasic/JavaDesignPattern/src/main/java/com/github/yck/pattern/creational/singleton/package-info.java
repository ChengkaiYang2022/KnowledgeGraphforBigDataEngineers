package com.github.yck.pattern.creational.singleton;
/**
 * 单例模式的几种实现
 *  - 饿汉式
 *      - 特点1：构造器私有化。防止用户自己实例化数据
 *      - 特点2：之所以叫做饿汉式，是利用JVM在加载的时候，随着类装载到方法区，单例就已经被初始化了。
 *      - 优点：不存在线程安全的问题。
 *      - 缺点：浪费内存，不一定用。
 *  - 懒汉式-线程安全版本
 *      - 特点1：使用同步方法保证线程安全问题
 *      - 缺点：运行速度可能慢一些
 *  - 懒汉式-双重检查
 *      - 特点1：第一次判断是否为空，极大地提高了运行速度，因为当成功获得单例之后，再也不用走同步代码块。
 *      - 特点2：第二次判断在同步代码块中，保证只有一个单例
 *      - 建议使用
 *  - 懒汉式-静态内部类
 *      - 利用静态内部类只有在调用时候才会初始化 + JVM初始化是时候式单线程的
 *      - 建议使用
 *  - 懒汉式-枚举类
 *      - 特点1：本身使用的就是枚举类，所以是单例的。
 *      - 建议使用
 *
 */